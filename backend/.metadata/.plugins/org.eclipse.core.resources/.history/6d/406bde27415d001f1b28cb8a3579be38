package com.example.ecommerce_website.service;

import org.springframework.stereotype.Service;

import com.example.ecommerce_website.exception.CartItemException;
import com.example.ecommerce_website.exception.UserException;
import com.example.ecommerce_website.model.Cart;
import com.example.ecommerce_website.model.CartItem;
import com.example.ecommerce_website.model.Product;
import com.example.ecommerce_website.model.User;
import com.example.ecommerce_website.repo.CartItemRepo;
import com.example.ecommerce_website.repo.CartRepo;

@Service
public class CartItemServiceImplementation implements CartItemService{
	private CartRepo cartRepo;
	private CartItemRepo cartItemRepo;
	private UserService userService;
	
	public CartItemServiceImplementation(CartRepo cartRepo, CartItemRepo cartItemRepo, UserService userService) {
		super();
		this.cartRepo = cartRepo;
		this.cartItemRepo = cartItemRepo;
		this.userService = userService;
	}

	@Override
	public CartItem createCartItem(CartItem cartItem) {
		cartItem.setQuantity(1);
		cartItem.setPrice(cartItem.getProduct().getPrice()*cartItem.getQuantity());
		cartItem.setDiscountedPrice(cartItem.getProduct().getDiscountedPrice()*cartItem.getQuantity());
		
		CartItem createdCartitem = cartItemRepo.save(cartItem);
		
		return createdCartitem;
	}

	@Override
	public CartItem updateCartItem(Long userId, Long cartItemId, CartItem cartItem)
			throws CartItemException, UserException {
		CartItem item = findCartItemById(cartItemId);
		User user = userService.findUserById(userId);
		
		if(user.getId().equals(userId)) {
			item.setQuantity(item.getQuantity());
			item.setPrice(item.getProduct().getPrice()*item.getQuantity());
			item.setDiscountedPrice(item.getProduct().getDiscountedPrice()*item.getQuantity());
		}
		return cartItemRepo.save(item);
	}

	@Override
	public CartItem isCartItemExist(Product product, Cart cart, String size, Long userId) {
		CartItem cartItem = cartItemRepo.isCartItemExist(cart, product, size, userId);
		return cartItem;
	}

	@Override
	public void removeCartItem(Long userId, Long cartItemId) throws CartItemException, UserException {
		CartItem cartItem = findCartItemById(cartItemId);
	}

	@Override
	public CartItem findCartItemById(Long cartItemId) throws CartItemException {
		// TODO Auto-generated method stub
		return null;
	}

}
