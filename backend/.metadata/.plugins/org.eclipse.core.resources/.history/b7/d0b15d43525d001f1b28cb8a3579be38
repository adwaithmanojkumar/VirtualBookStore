package com.example.ecommerce_website.controller;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.ecommerce_website.exception.ProductException;
import com.example.ecommerce_website.model.Product;
import com.example.ecommerce_website.service.ProductService;

@RestController
@RequestMapping("/api")
public class ProductController {
	private ProductService productService;
	
	@GetMapping("/products")
	public ResponseEntity<Page<Product>> getAllProductsByCategoryHandler(@RequestParam String category,@RequestParam List<String> color,@RequestParam List<String> size,
			@RequestParam Integer minPrice,@RequestParam Integer maxPrice,@RequestParam Integer minDiscount,@RequestParam String sort,
			@RequestParam String stock,@RequestParam Integer pageNumber,@RequestParam Integer pageSize) {
		Page<Product> res = productService.getAllProducts(category, color, size, minPrice, maxPrice, minDiscount, sort, stock, pageNumber, pageSize);
		
		System.out.println("Complete products");
		
		return new ResponseEntity<Page<Product>>(res, HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/products/id/{productId}")
	public ResponseEntity<Product> findProductByIdHandler(@PathVariable Long productId) throws ProductException {
		Product product = productService.findProductById(productId);
		
		return new ResponseEntity<Product>(product, HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/products/search")
	public ResponseEntity<List<Product>> searchProductHandler(@RequestParam q) {
		List<Product> products = productService.searchProducts(q);
		
		return new ResponseEntity<List<Product>>(products, HttpStatus.ACCEPTED);
	}
}
