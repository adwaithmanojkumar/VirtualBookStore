package com.example.ecommerce_website.service;

import org.springframework.stereotype.Service;
import com.example.ecommerce_website.exception.ProductException;
import com.example.ecommerce_website.model.Cart;
import com.example.ecommerce_website.model.CartItem;
import com.example.ecommerce_website.model.Product;
import com.example.ecommerce_website.model.User;
import com.example.ecommerce_website.repo.CartRepo;
import com.example.ecommerce_website.request.AddItemRequest;

@Service
public class CartServiceImplementation implements CartService {
	private CartRepo cartRepo;
	private CartItemService cartItemService;
	private ProductService productService;
	
	public CartServiceImplementation(CartRepo cartRepo, CartItemService cartItemService,
			ProductService productService) {
		super();
		this.cartRepo = cartRepo;
		this.cartItemService = cartItemService;
		this.productService = productService;
	}

	@Override
	public Cart createCart(User user) {
		Cart cart = new Cart();
		cart.setUser(user);
		return cart;
	}

	@Override
	public String addCartItem(Long userId, AddItemRequest req) throws ProductException {
		Cart cart = cartRepo.findByUserId(userId); 
		Product product = productService.findProductById(req.getProductId());
		CartItem isPresent = cartItemService.isCartItemExist(product, cart, req.getSize(), userId);
		
		if(isPresent==null) {
			CartItem cartItem = new CartItem();
			cartItem.setProduct(product);
			cartItem.setCart(cart);
			cartItem.setSize(req.getSize());
			cartItem.setQuantity(req.getQuantity());
			cartItem.setUserId(userId);
			
			int price = req.getQuantity()*product.getDiscountedPrice();
			cartItem.setPrice(price);
			
			CartItem createdCartItem = cartItemService.createCartItem(cartItem);
			cart.getCartItems().add(createdCartItem);
			return "Item added to cart";
		}
		
		throw new ProductException("Requested product can't be added to cart");
	}

	@Override
	public Cart findUserCart(Long userId) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
