package com.example.ecommerce_website.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.ecommerce_website.exception.OrderException;
import com.example.ecommerce_website.model.Order;
import com.example.ecommerce_website.service.OrderService;

@RestController
@RequestMapping("/api/admin/orders")
public class AdminOrderController {
	private OrderService orderService;

	public AdminOrderController(OrderService orderService) {
		super();
		this.orderService = orderService;
	}
	
	@GetMapping("/")
	public ResponseEntity<List<Order>> getAllOrdersHandler() {
		List<Order> orders = orderService.getAllOrders();
		return new ResponseEntity<List<Order>>(orders, HttpStatus.ACCEPTED);
	}
	
	@PutMapping("/{orderId}/confirm")
	public ResponseEntity<Order> confirmedOrderHandler(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException {
		Order order = orderService.confirmedOrder(orderId);
		return new ResponseEntity<Order>(order, HttpStatus.OK);
	}
	
	@PutMapping("/{orderId}/ship")
	public ResponseEntity<Order> shippedOrderHandler(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException {
		Order order = orderService.shippedOrder(orderId);
		return new ResponseEntity<Order>(order, HttpStatus.OK);
	}
	
	@PutMapping("/{orderId}/deliver")
	public ResponseEntity<Order> deliveredOrderHandler(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException {
		Order order = orderService.deliveredOrder(orderId);
		return new ResponseEntity<Order>(order, HttpStatus.OK);
	}
	
	@PutMapping("/{orderId}/cancel")
	public ResponseEntity<Order> cancelledOrderHandler(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException {
		Order order = orderService.cancelledOrder(orderId);
		return new ResponseEntity<Order>(order, HttpStatus.OK);
	}
	
	@DeleteMapping("/{orderId}/delete")
	public ResponseEntity<Order> deletedOrderHandler(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException {
		Order order = orderService.deleteOrder(orderId);
		return new ResponseEntity<Order>(order, HttpStatus.OK);
	}
}
